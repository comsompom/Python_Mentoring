17.02.25
Sprint 11
Task 53

0. Solve two simple problems on the leetcode and commit them to the git repo.
1. Create separate repo: "knowledge_check"
   1.1. In this repo create the create the Flask app:
        a. App should have the login page (email, password)
        b. should be connected the SQLite db using the singleton
        c. should log the user (login, time spend, activity)
   1.2. App should have the One page (route) "qulification". On which should dynamically appear 40 questions about python language.
        a. Each question shouldhave at least 4 options to answer. The answers should be multichecked, but only one answer should be correct.
        b. all questions and answers should be in the database.
        c. all user answers should be saved to the database.
   1.3. App should have the own timer for 45 minutes. When time is off the test should calculate the result. Right result should be the answers
        for at least 80% (32 right answers)
   1.4. App should run local and from the docker.
   1.5. All logic of the app should be covered by unit tests
   1.6. App should have own CI/CD on the git with auto checking each commit and auto run the unit tests
   1.7. The questions for the app should covere the Python language concepts which was learned during the studying
_____________________________________________________________________________________________________________
18.02.25
Sprint 11
Task 54

0. Solve two simple problems on the leetcode and commit to the git repo
1. Based on the previous:
   https://github.com/Svajunas900/knowledge_check/tree/main
   Flask app improve the app.
   1.1. add the function which should shuffle the questions and answers. It means each time passing the questions sequence should not be 
      	the same. The answers possibilities also should not be in the same sequence
   1.2. Cover all functions in the app with unit tests
   1.3. Create the selenium auto pass (test) self working script which should successfully passed the quiz with the result not less then
        81% and no more then 94%
_____________________________________________________________________________________________________________
19.02.25
Sprint 11
Task 55

0. Solve two simple problems on the leetcode and commit them to the git repo
1. Check the AWS courses:
   https://www.linkedin.com/learning/aws-essential-training-for-developers-17237791/what-is-the-best-way-to-use-aws?u=89254810
   https://www.linkedin.com/learning/learning-amazon-web-services-aws-for-developers-14924833/getting-started-in-aws?u=89254810

_____________________________________________________________________________________________________________
20.02.25
Sprint 11
Task 56

0. Solve two simple problems and commit them to the git repo
1. on the leetcode get the SQL assessment:
   https://leetcode.com/studyplan/top-sql-50/
   Solve 15 tasks from SQL Leetcode. 
   1.1 The tasks should be done with SQL and Pandas. For each task create separate file on the GitHub leetcode repo. In this file should
       solution on the SQL (commented) and with panda library. 
   1.2. Each Task should have the own unit test (for python panda)
_____________________________________________________________________________________________________________
21.02.25
Sprint 11
Task 57

0. Solve two simple problems on the leetcodeand commit them to the git repo.
1. on the leetcode SQL assessment finish other task
   1.1. Solve the SQl problems with SQL 
   1.2. Solve the SQL problems with pandas
   1.3. Create the tests for python pandas solution for SQLs
_____________________________________________________________________________________________________________

21.02.25
Sprint 11
Task 58

1. Check the ML Sentence Transformer:
   https://sbert.net/
2. Create separate (PRIVATE) git repo "ml_investigation" (add to this repo Oleg Bourdo). Repo should be private and closed from public
3. Create in the repo "ml_investigation" separate folder "first_examples"
4. in the "first_examples" - create sample python scripts for the ML SentenceTransformers model
5. Use the model for work: 'all-mpnet-base-v2'
6. Using the pretrained model create 2 simple examples of using the SentenceTransformers model
_____________________________________________________________________________________________________________
