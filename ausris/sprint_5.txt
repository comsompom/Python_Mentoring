05.05.25
Sprint 5
Task 23

1. Solve two simple problems on the leetcode and commit changes to the git repo
2. Based on the previous Django project add the payment acceptance
   a. Using the Fa√ßade pattern create the payment system for: 
      Bank card, Virtual user account, Crypto.
   b. Add route, url and separate page for each user
   c. Add table payment_methods (id, method)
   d. Add table user_payment (id, user_id, payment_method, payment_value, date_time)
   e. Each user could make the payment for the program participation after the login
3. All payments should be checked in the admin login page and administrator could include and exclude the participants to each separate
   program

________________________________________________________________________________________________________

06.05.25
Sprint 5
Task 24

1. Solve two simple problems on the leetcode and commit changes to the git repo
2. Create separate FastAPI microservice app which:
      a.1. Should work with own schedule (each 10 minutes (using Celery)) and scribe (using Selenium) the information (just public) about: sport news, sport events (from puiblic resources like CNN)
      a.2 All information should be saved in the SQLite database.
      a.3 Provide the collected information (return it) by the two routes: 
          1 - Last world sport news;
          2 - Future world sport events;
      a.4 Returned information should be in the JSON format.
   b. FastAPI app should work locally and inside docker container
   c. FastAPI should be covered with tests

________________________________________________________________________________________________________
07.05.25
Sprint 5
Task 25

1. Solve two simple problems on the leetcode and commit changes to the git repo
2. Check the tech materials about db indexes
3. Check Tech materials about Celery for solve the previous FasApi task


Tech materials:
DB INdexes
https://www.linkedin.com/learning/advanced-sql-for-query-tuning-and-performance-optimization-22894038/reduce-query-response-time-with-query-tuning?resume=false&u=89254810

Celery
https://www.caktusgroup.com/blog/2021/08/11/using-celery-scheduling-tasks/
https://medium.com/@thujuli/how-to-schedule-tasks-using-celery-in-flask-application-c004dd3c5e5c
https://www.axelerant.com/blog/how-to-schedule-periodic-tasks-using-celery-beat
https://medium.com/@pranavdixit20/custom-task-scheduling-in-python-using-redis-and-celery-3918ee143cac
https://docs.celeryq.dev/en/latest/userguide/periodic-tasks.html
________________________________________________________________________________________________________

08.05.25
Sprint 5 
Task 26

1. Solve two simple problems on the leetcode and commit changes to the git repo
2. based on previous Django project for workout connect the two FastAPI:
   2.1. connect the FastApi stock app: ( https://github.com/ausrys/FastAPI_Examples/tree/main/Stock_API )
   2.2. connect the FastApi sport collector app ( https://github.com/ausrys/FastAPI_Examples/tree/main/FastAPI_sport_collector )
   as the advertisement in the column of the Django project views.
3. Add separate tables structure for Advertisers:
   3.1. Advertisers could login in the Django Workout project base on their paid subscriptions and provide the links
        for the APIs.
   3.2. The place of the Ads should be different based of the subscription
   3.3. different levels of the ads subscription should provide different values like: 
       	3.3.1. Number of the show ads, Time of the showing ads, place of the showing ads in the Django view
   3.4. All actions should be separately logged in the advertiser logging table.
   3.5. Should be separate Report view which will represent number of the showed ads, number of the clicks to the ads
   3.6. Should be separate Administration report view which is showing all the advertisers actions.

________________________________________________________________________________________________________
